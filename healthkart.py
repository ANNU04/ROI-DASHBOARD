# -*- coding: utf-8 -*-
"""HealthKart.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eekfSFY7A_zGUPgOroUZ1_dH-u6w_dTB
"""

import pandas as pd
import random
from datetime import datetime, timedelta
from faker import Faker

fake = Faker()

categories = ['Fitness', 'Tech', 'Beauty', 'Travel', 'Fashion', 'Gaming', 'Food', 'Finance', 'Parenting']
genders = ['Male', 'Female']
platforms = ['Instagram', 'Youtube', 'LinkedIn', 'Twitter']

def generate_influencers(num_records = 50):
    data = []
    for i in range(1, num_records + 1):
        name = fake.name()
        category = random.choice(categories)
        gender = random.choice(genders)
        follower_count = random.randint(100000, 2000000)
        platform = random.choice(platforms)
        data.append([i, name, category, gender, follower_count, platform])

    df = pd.DataFrame(data, columns=['ID', 'name', 'category', 'gender', 'follower_count', 'platform'])
    return df

influencers_df = generate_influencers(50)
influencers_df.to_csv("/content/influencers.csv", index=False)

influencer_ids = list(range(1, 51))
platforms = ['Instagram', 'Youtube', 'LinkedIn', 'Twitch']

# Generate post data
def generate_posts(num_posts=200):
    posts = []
    for _ in range(num_posts):
        influencer_id = random.choice(influencer_ids)
        platform = random.choice(platforms)
        date = fake.date_between(start_date='-90d', end_date='today')
        url = f"https://{platform.lower()}.com/post/{fake.uuid4()[:8]}"
        caption = fake.sentence(nb_words=10)
        reach = random.randint(1000, 500000)
        likes = random.randint(100, int(reach * 0.3))
        comments = random.randint(10, int(likes * 0.2))
        posts.append([
            influencer_id, platform, date, url, caption, reach, likes, comments
        ])

    return pd.DataFrame(posts, columns=[
        'influencer_id', 'platform', 'date', 'URL', 'caption', 'reach', 'likes', 'comments'
    ])

# Generate and save
posts_df = generate_posts(200)
posts_df.to_csv("/content/posts.csv", index=False)

sources = ['Instagram', 'YouTube', 'Email', 'LinkedIn', 'Twitch']
campaigns = ['SummerSale', 'NewLaunch', 'FlashDeal', 'FestiveDrop']
products = ['Protein Powder', 'Smartwatch', 'Yoga Mat', 'Hair Serum', 'Running Shoes']
influencer_ids = list(range(1, 51))  # Assuming 50 influencers

def generate_tracking_data(num_rows=300):
    data = []
    for _ in range(num_rows):
        source = random.choice(sources)
        campaign = random.choice(campaigns)
        influencer_id = random.choice(influencer_ids)
        user_id = fake.uuid4()
        product = random.choice(products)
        date = fake.date_between(start_date='-60d', end_date='today')
        orders = random.randint(1, 5)
        revenue = round(orders * random.uniform(200, 2000), 2)
        data.append([source, campaign, influencer_id, user_id, product, date, orders, revenue])

    return pd.DataFrame(data, columns=[
        'source', 'campaign', 'influencer_id', 'user_id', 'product', 'date', 'orders', 'revenue'
    ])

tracking_df = generate_tracking_data(300)
tracking_df.to_csv("/content/tracking_data.csv", index=False)

influencer_ids = list(range(1, 51))  # assuming 50 influencers

def generate_payouts():
    data = []
    for influencer_id in influencer_ids:
        basis = random.choice(['post', 'order'])
        if basis == 'post':
            rate = random.randint(1000, 5000)  # fixed rate per post
            orders = 0
            total_payout = rate  # flat fee
        else:
            rate = random.randint(100, 500)  # per order
            orders = random.randint(5, 50)
            total_payout = rate * orders

        data.append([influencer_id, basis, rate, orders, total_payout])

    return pd.DataFrame(data, columns=[
        'influencer_id', 'basis', 'rate', 'orders', 'total_payout'
    ])

payouts_df = generate_payouts()
payouts_df.to_csv("/content/payouts.csv", index=False)
